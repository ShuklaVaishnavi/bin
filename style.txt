import React from 'react';
import { Handle, Position, Node } from 'react-flow-renderer';

interface INodeProps {
  data: {
    isLeaf: boolean;
  };
}

const ColoredNode: React.FC<INodeProps & Node> = ({ data }) => {
  return (
    <div style={{ background: data.isLeaf ? 'red' : 'green', width: '100px', height: '100px' }}>
      <Handle type="target" position={Position.Top} />
      <Handle type="source" position={Position.Bottom} />
    </div>
  );
};

export default ColoredNode;




import React from 'react';
import ReactFlow from 'react-flow-renderer';
import ColoredNode from './ColoredNode';

const nodeTypes = {
  coloredNode: ColoredNode,
};

const nodes = [
  {
    id: '1',
    type: 'coloredNode',
    data: { isLeaf: false },
    position: { x: 100, y: 100 },
  },
  {
    id: '2',
    type: 'coloredNode',
    data: { isLeaf: true },
    position: { x: 200, y: 200 },
  },
];

const MyFlow = () => {
  return <ReactFlow elements={nodes} nodeTypes={nodeTypes} />;
};

export default MyFlow;


