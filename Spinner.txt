import React, { useState, useEffect } from 'react';
import { fetchTaskData } from './api'; // Replace with your actual API function
import LoadingSpinner from './LoadingSpinner'; // Replace with your actual loading spinner component
import ReactFlow, { Controls } from 'react-flow-renderer';

const App = () => {
  const [isLoading, setIsLoading] = useState(true);
  const [taskData, setTaskData] = useState(null);

  useEffect(() => {
    // Simulate fetching data from backend
    fetchTaskData(taskId)
      .then((data) => {
        setTaskData(data);
        setIsLoading(false);
      })
      .catch((error) => {
        console.error('Error fetching task data:', error);
        setIsLoading(false);
      });
  }, []);

  return (
    <div>
      <Navbar />
      <div style={{ position: 'relative', height: '100vh' }}>
        {isLoading && <LoadingSpinner />} {/* Show loading spinner while fetching data */}
        {!isLoading && (
          <ReactFlow elements={taskData}>
            <Controls />
          </ReactFlow>
        )}
      </div>
    </div>
  );
};

export default App
