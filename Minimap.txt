import React, { useState, useRef, useCallback } from 'react';
import ReactFlow, { ReactFlowProvider, MiniMap, useZoomPanHelper, useStoreState } from 'react-flow-renderer';
import 'react-flow-renderer/dist/style.css';

const CustomMinimap = () => {
  const minimapRef = useRef(null);
  const [dragging, setDragging] = useState(false);
  const { transform } = useStoreState((state) => state);
  const { zoomTo, setCenter } = useZoomPanHelper();

  const onMouseDown = () => {
    setDragging(true);
  };

  const onMouseMove = useCallback((event) => {
    if (!dragging) return;

    const rect = minimapRef.current.getBoundingClientRect();
    const x = event.clientX - rect.left;
    const y = event.clientY - rect.top;

    const scale = rect.width / transform[2]; // Assuming the minimap width matches the viewport scale
    const newX = x / scale;
    const newY = y / scale;

    setCenter(newX, newY, transform[2]);
  }, [dragging, transform, setCenter]);

  const onMouseUp = () => {
    setDragging(false);
  };

  return (
    <div
      ref={minimapRef}
      onMouseDown={onMouseDown}
      onMouseMove={onMouseMove}
      onMouseUp={onMouseUp}
      style={{ width: 200, height: 150, position: 'relative', border: '1px solid black' }}
    >
      <MiniMap nodeColor={(node) => 'blue'} />
      <div
        style={{
          position: 'absolute',
          top: `${transform[1]}px`,
          left: `${transform[0]}px`,
          width: `${200 / transform[2]}px`,
          height: `${150 / transform[2]}px`,
          border: '2px solid white',
          cursor: 'move',
        }}
      />
    </div>
  );
};

export default CustomMinimap;




import React from 'react';
import ReactFlow, { ReactFlowProvider } from 'react-flow-renderer';
import CustomMinimap from './CustomMinimap';
import 'react-flow-renderer/dist/style.css';

const initialElements = [
  { id: '1', type: 'input', data: { label: 'Node 1' }, position: { x: 250, y: 0 } },
  { id: '2', data: { label: 'Node 2' }, position: { x: 100, y: 100 } },
  { id: '3', data: { label: 'Node 3' }, position: { x: 400, y: 100 } },
  { id: '4', type: 'output', data: { label: 'Node 4' }, position: { x: 250, y: 200 } },
];

const FlowComponent = () => {
  return (
    <ReactFlowProvider>
      <div style={{ display: 'flex', height: '100vh' }}>
        <ReactFlow elements={initialElements} style={{ flex: 1 }} />
        <CustomMinimap />
      </div>
    </ReactFlowProvider>
  );
};

export default FlowComponent;
