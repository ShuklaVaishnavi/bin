import React, { useState, ReactNode } from 'react';

interface TooltipProps {
  content: string;
  children: ReactNode;
  position?: 'top' | 'bottom' | 'left' | 'right';
}

const Tooltip: React.FC<TooltipProps> = ({ content, children, position = 'top' }) => {
  const [visible, setVisible] = useState(false);

  const showTooltip = () => setVisible(true);
  const hideTooltip = () => setVisible(false);

  const tooltipStyle: React.CSSProperties = {
    position: 'absolute',
    zIndex: 1000,
    backgroundColor: '#333',
    color: '#fff',
    padding: '5px',
    borderRadius: '3px',
    fontSize: '12px',
    whiteSpace: 'nowrap',
    visibility: visible ? 'visible' : 'hidden',
    opacity: visible ? 1 : 0,
    transition: 'opacity 0.2s',
  };

  const positionStyle: { [key: string]: React.CSSProperties } = {
    top: { bottom: '100%', left: '50%', transform: 'translateX(-50%)', marginBottom: '5px' },
    bottom: { top: '100%', left: '50%', transform: 'translateX(-50%)', marginTop: '5px' },
    left: { right: '100%', top: '50%', transform: 'translateY(-50%)', marginRight: '5px' },
    right: { left: '100%', top: '50%', transform: 'translateY(-50%)', marginLeft: '5px' },
  };

  return (
    <div
      style={{ position: 'relative', display: 'inline-block' }}
      onMouseEnter={showTooltip}
      onMouseLeave={hideTooltip}
    >
      {children}
      <div style={{ ...tooltipStyle, ...positionStyle[position] }}>{content}</div>
    </div>
  );
};

export default Tooltip





import React from 'react';
import ReactFlow, { OnLoadParams, Elements } from 'react-flow-renderer';
import Tooltip from './Tooltip';

const elements: Elements = [
  {
    id: '1',
    data: {
      label: (
        <Tooltip content="This is Node 1">
          <div>Node 1</div>
        </Tooltip>
      ),
    },
    position: { x: 250, y: 5 },
  },
  {
    id: '2',
    data: {
      label: (
        <Tooltip content="This is Node 2">
          <div>Node 2</div>
        </Tooltip>
      ),
    },
    position: { x: 100, y: 100 },
  },
  // Add more nodes as needed
];

const onLoad = (reactFlowInstance: OnLoadParams) => {
  reactFlowInstance.fitView();
};

const MyReactFlow: React.FC = () => (
  <div style={{ height: 500 }}>
    <ReactFlow
      elements={elements}
      onLoad={onLoad}
      style={{ width: '100%', height: '100%' }}
    />
  </div>
);

export default MyReactFlow;
