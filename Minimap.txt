import React, { useState } from 'react';
import ReactFlow, { ReactFlowProvider, MiniMap, useReactFlow } from 'react-flow-renderer';
import 'react-flow-renderer/dist/style.css';

const CustomMinimap = () => {
  const [transform, setTransform] = useState([0, 0, 1]);
  const { setViewport } = useReactFlow();

  const handleMouseMove = (event: React.MouseEvent<HTMLDivElement>) => {
    const rect = event.currentTarget.getBoundingClientRect();
    const x = event.clientX - rect.left;
    const y = event.clientY - rect.top;

    const newX = x * transform[2];
    const newY = y * transform[2];

    setViewport({ x: newX, y: newY, zoom: transform[2] });
  };

  return (
    <div
      style={{ width: 200, height: 150, position: 'relative', border: '1px solid black' }}
      onMouseMove={handleMouseMove}
    >
      <MiniMap nodeColor={(node) => 'blue'} />
      <div
        style={{
          position: 'absolute',
          top: `${transform[1] / transform[2]}px`,
          left: `${transform[0] / transform[2]}px`,
          width: `${200 / transform[2]}px`,
          height: `${150 / transform[2]}px`,
          border: '2px solid white',
          cursor: 'move',
        }}
      />
    </div>
  );
};

const FlowComponent = () => {
  return (
    <ReactFlowProvider>
      <div style={{ display: 'flex', height: '100vh' }}>
        <ReactFlow elements={[]} style={{ flex: 1 }} />
        <CustomMinimap />
      </div>
    </ReactFlowProvider>
  );
};

export default FlowComponent;
