// App.tsx
import React, { useState } from 'react';
import ReactFlow, { Controls } from 'reactflow';
import 'reactflow/dist/style.css';
import Navbar from './components/Navbar'; // Adjust the import based on your project structure
import LoadingSpinner from './components/LoadingSpinner'; // Adjust the import based on your project structure
import { fetchTaskData } from './api'; // Adjust the import based on your project structure

const App = () => {
  const [taskId, setTaskId] = useState('');
  const [isLoading, setIsLoading] = useState(false);
  const [nodes, setNodes] = useState([]);
  const [edges, setEdges] = useState([]);
  const [showGraph, setShowGraph] = useState(false);

  const handleFetchData = (e) => {
    e.preventDefault();
    setIsLoading(true);
    setShowGraph(false);
    fetchTaskData(taskId)
      .then((data) => {
        setNodes(data.nodes || []); // Adjust based on your data structure
        setEdges(data.edges || []); // Adjust based on your data structure
        setIsLoading(false);
        setShowGraph(true);
      })
      .catch((error) => {
        console.error('Error fetching task data:', error);
        setIsLoading(false);
      });
  };

  return (
    <div>
      <Navbar />
      <form onSubmit={handleFetchData}>
        <input
          type="text"
          value={taskId}
          onChange={(e) => setTaskId(e.target.value)}
          placeholder="Enter Task ID"
        />
        <button type="submit">Submit</button>
      </form>
      <div style={{ position: 'relative', height: '100vh' }}>
        {isLoading && <LoadingSpinner />}
        {!isLoading && showGraph && (
          <ReactFlow nodes={nodes} edges={edges}>
            <Controls />
          </ReactFlow>
        )}
      </div>
    </div>
  );
};

export default App;
